


  #- name: 'gcr.io/ecommerce-434317/sonar-scanner:latest'
  #  args:
  #  - '-Dsonar.host.url=https://sonarcloud.io'
  #  - '-Dsonar.login=68b6ef9ccb6730fe9ef96d7ab708265d9a63aae0'
  #  - '-Dsonar.projectKey=gt0593sonarcloud_basic-nodejs-app'
  #  - '-Dsonar.organization=gt0593sonarcloud'
  #  - '-Dsonar.sources=.'

  - name: node
    entrypoint: npm
    args: ['install']

    #Preparar entorno para sonar-scanner
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir /workspace/.scannerwork
        chown 1000:1000 /workspace/.scannerwork
        chmod -R 777 /workspace/.scannerwork
            
  - name: 'us-central1-docker.pkg.dev/ecommerce-434317/sonar-scanner/sonar-scanner:5'
    entrypoint: 'sonar-scanner'
    args:
#      - '-X' #debug
      - '-Dsonar.host.url=https://sonarcloud.io'
      - '-Dsonar.projectKey=gt0593sonarcloud_basic-nodejs-app'
      - '-Dsonar.organization=gt0593sonarcloud'
      - '-Dsonar.exclusions=Dockerfile,**/*.html,**/*.json,tests/**,**/*.yaml'
      - '-Dsonar.javascript.lcov.reportPaths=coverage/lcov.info'
      - '-Dsonar.sources=.'
  #    - '-Dsonar.tests=tests'
    env:
      - SONAR_TOKEN=2021fdd9704fb6d5378fcf9e817a873ee027bc46

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update
        apt-get install jq -y
        #obtener el qualitygate usando el API
        responce =$(curl-s -u 2021fdd9704fb6d5378fcf9e817a873ee027bc46: https://sonarcloud.io/api/qualitygates/project_status?projectKey=gt0593sonarcloud_basic-nodejs-app) 
        status =$(echo $response | jq -r '.projectStatus.status')
        if ["$status" == "ERROR"]
        then
          echo "Quality Gate Failed"
          exit 1
        fi
        if ["$status" == "Ok"]
        then
          echo "Quality Gate Passed"
        else
          echo "Quality Gate unknow"
          exit 2
        fi
        
    # Build the container image using definition on Dockerfile
  #- name: 'gcr.io/cloud-builders/docker'
  #  args: ['build', '-t', 'us-central1-docker.pkg.dev/ecommerce-434317/basic-nodejs-app/basic-nodejs-app:$COMMIT_SHA', '.']

    # Push the container image to Artifact Registry
  #- name: 'gcr.io/cloud-builders/docker'
  #  args: ['push', 'us-central1-docker.pkg.dev/ecommerce-434317/basic-nodejs-app/basic-nodejs-app:$COMMIT_SHA']
    # Deploy container image to Cloud Run
  #- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #  entrypoint: gcloud
  #  args:
  #  - 'run'
  #  - 'deploy'
  #  - 'basic-nodejs-app'
  #  - '--image'
  #  - 'us-central1-docker.pkg.dev/ecommerce-434317/basic-nodejs-app/basic-nodejs-app:$COMMIT_SHA'
  #  - '--region'
  #  - 'us-central1'
images:
  - 'us-central1-docker.pkg.dev/ecommerce-434317/basic-nodejs-app/basic-nodejs-app:$COMMIT_SHA'
options:
  logging: CLOUD_LOGGING_ONLY
